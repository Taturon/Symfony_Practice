# config/packages/messenger.yaml
framework:
    messenger:
        buses:
            # disable the default middleware
            default_middleware: false
            # and/or add your own
            middleware:
                # service ids that implement Symfony\Component\Messenger\Middleware\MiddlewareInterface
                - 'App\Middleware\MyMiddleware'
                - 'App\Middleware\AnotherMiddleware'
        serializer:
            default_serializer: messenger.transport.symfony_serializer
            symfony_serializer:
                format: json
                context: { }
        # after retrying, messages will be sent to the "failed" transport
        failure_transport: failed_default
        transports:
            async: "%env(MESSENGER_TRANSPORT_DSN)%"
            sync: 'sync://'
            yours: 'my-transport://...'
            async_priority_high:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                options:
                    # queue_name is specific to the doctrine transport
                    queue_name: high

                    # for AMQP send to a separate exchange then queue
                    #exchange:
                    #    name: high
                    #queues:
                    #    messages_high: ~
                    # or redis try "group"
                retry_strategy:
                    max_retries: 3
                    # milliseconds delay
                    delay: 1000
                    # causes the delay to be higher before each retry
                    # e.g. 1 second delay, 2 seconds, 4 seconds
                    multiplier: 2
                    max_delay: 0
                    # override all of this with a service that
                    # implements Symfony\Component\Messenger\Retry\RetryStrategyInterface
                    # service: null
            async_priority_normal:
                dsn: # ...
                serializer: messenger.transport.symfony_serializer
            async_priority_low:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                options:
                    queue_name: low
            failed_default: 'doctrine://default?queue_name=failed_default'
            failed_high_priority: 'doctrine://default?queue_name=failed_high_priority'
            my_transport:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                options:
                    auto_setup: false
            async_priority_normal: # ...
            image_transport: # ...

        routing:
            'App\Message\SmsNotification': async
            'App\Message\AbstractAsyncMessage': async
            'App\Message\AsyncMessageInterface': async
            'App\Message\UploadedImage': [image_transport, async_priority_normal]
            'My\Message\ToBeSentToTwoSenders': [async, audit]
            'Symfony\Component\Mailer\Messenger\SendEmailMessage': async
            App\Message\SmsNotification: sync
            'App\Message\SmsNotification':  async_priority_low
            'App\Message\NewUserWelcomeEmail':  async_priority_high
